{
  "contractName": "UpgradeableBeacon",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x5615339d191e77be7e46319b67856f9355786f705b7b3c4a7237ab70c1864ab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c6a52e49bd374890523443ac6e20fa0ca09ff8d65d5adbca6f2c8733758eea\",\"dweb:/ipfs/QmXXccov4bGGVqg6BwYc8QU9JwCNHmVYePj1ZYpgkxTbpF\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x15a35b237beb6f27d2546361342485eda5850ed8fa1cd12ae8f3f7ca7a88d6f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c0d65b3ab1f913a4d550f2764555888db87bda9ee076588f50e5ae565adfe6f\",\"dweb:/ipfs/QmT212mo6xAki1dBdw7uQLi86gzaGEquSxGy1f28mu2V1a\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161059538038061059583398101604081905261002f9161018b565b610051610043640100000000610069810204565b64010000000061006d810204565b610063816401000000006100bd810204565b506101b9565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100d38164010000000061024561018582021704565b610163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b60018054600160a060020a031916600160a060020a0392909216919091179055565b3b151590565b60006020828403121561019c578081fd5b8151600160a060020a03811681146101b2578182fd5b9392505050565b6103cd806101c86000396000f3fe608060405234801561001057600080fd5b506004361061005a5760e060020a60003504633659cfe6811461005f5780635c60da1b14610074578063715018a61461009d5780638da5cb5b146100a5578063f2fde38b146100ad575b600080fd5b61007261006d366004610334565b6100c0565b005b600154600160a060020a03165b604051600160a060020a03909116815260200160405180910390f35b61007261013b565b610081610179565b6100726100bb366004610334565b610188565b336100c9610179565b600160a060020a0316146100fb5760405160e560020a62461bcd0281526004016100f290610362565b60405180910390fd5b6101048161024b565b604051600160a060020a038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b33610144610179565b600160a060020a03161461016d5760405160e560020a62461bcd0281526004016100f290610362565b61017760006102e4565b565b600054600160a060020a031690565b33610191610179565b600160a060020a0316146101ba5760405160e560020a62461bcd0281526004016100f290610362565b600160a060020a0381166102395760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016100f2565b610242816102e4565b50565b3b151590565b803b6102c25760405160e560020a62461bcd02815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e74726163740000000000000000000000000060648201526084016100f2565b60018054600160a060020a031916600160a060020a0392909216919091179055565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610345578081fd5b8135600160a060020a038116811461035b578182fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212205451c287792dfe451a70f4f607b09b76b65bc64e6bdb51e4f71aea844cdb7e4064736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061005a5760e060020a60003504633659cfe6811461005f5780635c60da1b14610074578063715018a61461009d5780638da5cb5b146100a5578063f2fde38b146100ad575b600080fd5b61007261006d366004610334565b6100c0565b005b600154600160a060020a03165b604051600160a060020a03909116815260200160405180910390f35b61007261013b565b610081610179565b6100726100bb366004610334565b610188565b336100c9610179565b600160a060020a0316146100fb5760405160e560020a62461bcd0281526004016100f290610362565b60405180910390fd5b6101048161024b565b604051600160a060020a038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b33610144610179565b600160a060020a03161461016d5760405160e560020a62461bcd0281526004016100f290610362565b61017760006102e4565b565b600054600160a060020a031690565b33610191610179565b600160a060020a0316146101ba5760405160e560020a62461bcd0281526004016100f290610362565b600160a060020a0381166102395760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016100f2565b610242816102e4565b50565b3b151590565b803b6102c25760405160e560020a62461bcd02815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e74726163740000000000000000000000000060648201526084016100f2565b60018054600160a060020a031916600160a060020a0392909216919091179055565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610345578081fd5b8135600160a060020a038116811461035b578182fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212205451c287792dfe451a70f4f607b09b76b65bc64e6bdb51e4f71aea844cdb7e4064736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:746:47",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:47",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:47",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:47",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:47"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:47"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:47"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:47"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:47"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:47"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:47"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:47"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:47"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:47"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:47"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:47",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:47",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:47"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:47"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:47"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:47"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:47"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:47"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:47"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:1:47",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "256:3:47",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:47"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:47"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:47",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:47"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:47"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:47"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:47"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:47"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:47"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:47",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:47"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:47",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:47",
                "type": ""
              }
            ],
            "src": "14:310:47"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:241:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "520:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "531:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:21:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "513:21:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "554:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "565:2:47",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "550:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "550:18:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:2:47",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "543:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:30:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "543:30:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:47",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "609:34:47",
                        "type": "",
                        "value": "UpgradeableBeacon: implementatio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "582:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:62:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:62:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "664:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "675:2:47",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "660:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "660:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "680:21:47",
                        "type": "",
                        "value": "n is not a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "653:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:49:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "653:49:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "711:27:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "723:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "734:3:47",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "719:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:19:47"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "711:4:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "480:9:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "494:4:47",
                "type": ""
              }
            ],
            "src": "329:415:47"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"UpgradeableBeacon: implementatio\")\n        mstore(add(headStart, 96), \"n is not a contract\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 47,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1764:47",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:47",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:259:47",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:47",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:47"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:47"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:47"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:47"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:47"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:47"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:47"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:47"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:47"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:47"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:47"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:47",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "287:26:47",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "296:6:47"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "304:6:47"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "289:6:47"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "289:22:47"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "289:22:47"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:47"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:47"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "241:42:47",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:47"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:54:47"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:65:47"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:73:47"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "322:15:47",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "332:5:47"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "322:6:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:47",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:47",
                "type": ""
              }
            ],
            "src": "14:329:47"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "449:125:47",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "459:26:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "471:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "482:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "467:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "467:18:47"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "459:4:47"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "501:9:47"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "516:6:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "524:42:47",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "512:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "512:55:47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "494:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:74:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "494:74:47"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "418:9:47",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "429:6:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "440:4:47",
                "type": ""
              }
            ],
            "src": "348:226:47"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:228:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "770:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "781:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "763:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:21:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "763:21:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "804:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "815:2:47",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "800:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "800:18:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "820:2:47",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "793:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:30:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "793:30:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "854:2:47",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "859:34:47",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "832:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:62:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "832:62:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "914:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "925:2:47",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "910:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "910:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "930:8:47",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "903:36:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "903:36:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "948:27:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "960:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "971:3:47",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "956:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "956:19:47"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "948:4:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "744:4:47",
                "type": ""
              }
            ],
            "src": "579:402:47"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1160:241:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1177:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1188:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1170:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1170:21:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1170:21:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1211:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1222:2:47",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1207:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1207:18:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1227:2:47",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1200:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:30:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1200:30:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1250:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1261:2:47",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1246:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1266:34:47",
                        "type": "",
                        "value": "UpgradeableBeacon: implementatio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:62:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1239:62:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1321:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1332:2:47",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1317:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1317:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1337:21:47",
                        "type": "",
                        "value": "n is not a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1310:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1310:49:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1310:49:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1368:27:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1380:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1391:3:47",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1376:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1376:19:47"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1368:4:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1137:9:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1151:4:47",
                "type": ""
              }
            ],
            "src": "986:415:47"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1580:182:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1597:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1608:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1590:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1590:21:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1590:21:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1631:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1642:2:47",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1627:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1627:18:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1647:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1620:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1620:30:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1620:30:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1670:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1681:2:47",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1666:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1666:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1686:34:47",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1659:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1659:62:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1659:62:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1730:26:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1742:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1753:2:47",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1738:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1738:18:47"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1730:4:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1557:9:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1571:4:47",
                "type": ""
              }
            ],
            "src": "1406:356:47"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"UpgradeableBeacon: implementatio\")\n        mstore(add(headStart, 96), \"n is not a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 47,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "473:1496:39:-:0;;;861:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:33;877:12;:10;;;;:12;:::i;:::-;867:9;;;;:23;:::i;:::-;908:35:39;927:15;908:18;;;;:35;:::i;:::-;861:89;473:1496;;587:96:45;666:10;587:96;:::o;2041:169:33:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:33;;;-1:-1:-1;;;;;;2131:17:33;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;1741:226:39:-;1822:37;1841:17;1822:18;;;;;;:37;:::i;:::-;1814:101;;;;;;;531:2:47;1814:101:39;;;513:21:47;570:2;550:18;;;543:30;609:34;589:18;;;582:62;680:21;660:18;;;653:49;719:19;;1814:101:39;;;;;;;;1925:15;:35;;-1:-1:-1;;;;;;1925:35:39;-1:-1:-1;;;;;1925:35:39;;;;;;;;;;1741:226::o;718:377:44:-;1034:20;1080:8;;;718:377::o;14:310:47:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:47;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:47:o;503:241::-;473:1496:39;;;;;;",
  "deployedSourceMap": "473:1496:39:-:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;473:1496:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:167;;;;;;:::i;:::-;;:::i;:::-;;1028:112;1118:15;;-1:-1:-1;;;;;1118:15:39;1028:112;;;-1:-1:-1;;;;;512:55:47;;;494:74;;482:2;467:18;1028:112:39;;;;;;;1605:92:33;;;:::i;973:85::-;;;:::i;1846:189::-;;;;;;:::i;:::-;;:::i;1399:167:39:-;666:10:45;1185:7:33;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:33;;1177:68;;;;-1:-1:-1;;;;;1177:68:33;;;;;;;:::i;:::-;;;;;;;;;1480:37:39::1;1499:17;1480:18;:37::i;:::-;1532:27;::::0;-1:-1:-1;;;;;1532:27:39;::::1;::::0;::::1;::::0;;;::::1;1399:167:::0;:::o;1605:92:33:-;666:10:45;1185:7:33;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:33;;1177:68;;;;-1:-1:-1;;;;;1177:68:33;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:33;973:85;:::o;1846:189::-;666:10:45;1185:7:33;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:33;;1177:68;;;;-1:-1:-1;;;;;1177:68:33;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:33;::::1;1926:73;;;::::0;-1:-1:-1;;;;;1926:73:33;;781:2:47;1926:73:33::1;::::0;::::1;763:21:47::0;820:2;800:18;;;793:30;859:34;839:18;;;832:62;930:8;910:18;;;903:36;956:19;;1926:73:33::1;753:228:47::0;1926:73:33::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;718:377:44:-;1034:20;1080:8;;;718:377::o;1741:226:39:-;1034:20:44;;1814:101:39;;;;-1:-1:-1;;;;;1814:101:39;;1188:2:47;1814:101:39;;;1170:21:47;1227:2;1207:18;;;1200:30;1266:34;1246:18;;;1239:62;1337:21;1317:18;;;1310:49;1376:19;;1814:101:39;1160:241:47;1814:101:39;1925:15;:35;;-1:-1:-1;;;;;;1925:35:39;-1:-1:-1;;;;;1925:35:39;;;;;;;;;;1741:226::o;2041:169:33:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:33;;;-1:-1:-1;;;;;;2131:17:33;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:329:47:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;-1:-1:-1;;;;;234:5:47;230:54;223:5;220:65;210:2;;304:6;296;289:22;210:2;332:5;84:259;-1:-1:-1;;;84:259:47:o;1406:356::-;1608:2;1590:21;;;1627:18;;;1620:30;1686:34;1681:2;1666:18;;1659:62;1753:2;1738:18;;1580:182::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../../access/Ownable.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n * implementation contract, which is where they will delegate all function calls.\n *\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\n */\ncontract UpgradeableBeacon is IBeacon, Ownable {\n    address private _implementation;\n\n    /**\n     * @dev Emitted when the implementation returned by the beacon is changed.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n     * beacon.\n     */\n    constructor(address implementation_) {\n        _setImplementation(implementation_);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function implementation() public view virtual override returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev Upgrades the beacon to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * Requirements:\n     *\n     * - msg.sender must be the owner of the contract.\n     * - `newImplementation` must be a contract.\n     */\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Sets the implementation contract address for this beacon\n     *\n     * Requirements:\n     *\n     * - `newImplementation` must be a contract.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\n        _implementation = newImplementation;\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
    "exportedSymbols": {
      "Address": [
        10881
      ],
      "Context": [
        10903
      ],
      "IBeacon": [
        9774
      ],
      "Ownable": [
        9228
      ],
      "UpgradeableBeacon": [
        9849
      ]
    },
    "id": 9850,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9776,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:39"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 9777,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9850,
        "sourceUnit": 9775,
        "src": "58:23:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 9778,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9850,
        "sourceUnit": 9229,
        "src": "82:34:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 9779,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9850,
        "sourceUnit": 10882,
        "src": "117:33:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9781,
              "name": "IBeacon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9774,
              "src": "503:7:39"
            },
            "id": 9782,
            "nodeType": "InheritanceSpecifier",
            "src": "503:7:39"
          },
          {
            "baseName": {
              "id": 9783,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9228,
              "src": "512:7:39"
            },
            "id": 9784,
            "nodeType": "InheritanceSpecifier",
            "src": "512:7:39"
          }
        ],
        "contractDependencies": [
          9228,
          9774,
          10903
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9780,
          "nodeType": "StructuredDocumentation",
          "src": "152:320:39",
          "text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
        },
        "fullyImplemented": true,
        "id": 9849,
        "linearizedBaseContracts": [
          9849,
          9228,
          10903,
          9774
        ],
        "name": "UpgradeableBeacon",
        "nameLocation": "482:17:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9786,
            "mutability": "mutable",
            "name": "_implementation",
            "nameLocation": "542:15:39",
            "nodeType": "VariableDeclaration",
            "scope": 9849,
            "src": "526:31:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9785,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "526:7:39",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9787,
              "nodeType": "StructuredDocumentation",
              "src": "564:90:39",
              "text": " @dev Emitted when the implementation returned by the beacon is changed."
            },
            "id": 9791,
            "name": "Upgraded",
            "nameLocation": "665:8:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9789,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "690:14:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 9791,
                  "src": "674:30:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "673:32:39"
            },
            "src": "659:47:39"
          },
          {
            "body": {
              "id": 9801,
              "nodeType": "Block",
              "src": "898:52:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9798,
                        "name": "implementation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9794,
                        "src": "927:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9797,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9848,
                      "src": "908:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:35:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9800,
                  "nodeType": "ExpressionStatement",
                  "src": "908:35:39"
                }
              ]
            },
            "documentation": {
              "id": 9792,
              "nodeType": "StructuredDocumentation",
              "src": "712:144:39",
              "text": " @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."
            },
            "id": 9802,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9794,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nameLocation": "881:15:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 9802,
                  "src": "873:23:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:25:39"
            },
            "returnParameters": {
              "id": 9796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:0:39"
            },
            "scope": 9849,
            "src": "861:89:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9773
            ],
            "body": {
              "id": 9811,
              "nodeType": "Block",
              "src": "1101:39:39",
              "statements": [
                {
                  "expression": {
                    "id": 9809,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9786,
                    "src": "1118:15:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9808,
                  "id": 9810,
                  "nodeType": "Return",
                  "src": "1111:22:39"
                }
              ]
            },
            "documentation": {
              "id": 9803,
              "nodeType": "StructuredDocumentation",
              "src": "956:67:39",
              "text": " @dev Returns the current implementation address."
            },
            "functionSelector": "5c60da1b",
            "id": 9812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "1037:14:39",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9805,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1074:8:39"
            },
            "parameters": {
              "id": 9804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1051:2:39"
            },
            "returnParameters": {
              "id": 9808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9807,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9812,
                  "src": "1092:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1091:9:39"
            },
            "scope": 9849,
            "src": "1028:112:39",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9828,
              "nodeType": "Block",
              "src": "1470:96:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9821,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9815,
                        "src": "1499:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9820,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9848,
                      "src": "1480:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:37:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9823,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:37:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9825,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9815,
                        "src": "1541:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9824,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9791,
                      "src": "1532:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:27:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9827,
                  "nodeType": "EmitStatement",
                  "src": "1527:32:39"
                }
              ]
            },
            "documentation": {
              "id": 9813,
              "nodeType": "StructuredDocumentation",
              "src": "1146:248:39",
              "text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
            },
            "functionSelector": "3659cfe6",
            "id": 9829,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9818,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9817,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9171,
                  "src": "1460:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1460:9:39"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "1408:9:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9815,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1426:17:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 9829,
                  "src": "1418:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1417:27:39"
            },
            "returnParameters": {
              "id": 9819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:0:39"
            },
            "scope": 9849,
            "src": "1399:167:39",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9847,
              "nodeType": "Block",
              "src": "1804:163:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9838,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9832,
                            "src": "1841:17:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9836,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10881,
                            "src": "1822:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$10881_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 9837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10604,
                          "src": "1822:18:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 9839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1822:37:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 9840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1861:53:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        },
                        "value": "UpgradeableBeacon: implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        }
                      ],
                      "id": 9835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1814:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1814:101:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9842,
                  "nodeType": "ExpressionStatement",
                  "src": "1814:101:39"
                },
                {
                  "expression": {
                    "id": 9845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9843,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9786,
                      "src": "1925:15:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9844,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9832,
                      "src": "1943:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1925:35:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9846,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:35:39"
                }
              ]
            },
            "documentation": {
              "id": 9830,
              "nodeType": "StructuredDocumentation",
              "src": "1572:164:39",
              "text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
            },
            "id": 9848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nameLocation": "1750:18:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9832,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1777:17:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 9848,
                  "src": "1769:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1768:27:39"
            },
            "returnParameters": {
              "id": 9834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:0:39"
            },
            "scope": 9849,
            "src": "1741:226:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 9850,
        "src": "473:1496:39"
      }
    ],
    "src": "33:1937:39"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
    "exportedSymbols": {
      "Address": [
        10881
      ],
      "Context": [
        10903
      ],
      "IBeacon": [
        9774
      ],
      "Ownable": [
        9228
      ],
      "UpgradeableBeacon": [
        9849
      ]
    },
    "id": 9850,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9776,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:39"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 9777,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9850,
        "sourceUnit": 9775,
        "src": "58:23:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 9778,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9850,
        "sourceUnit": 9229,
        "src": "82:34:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 9779,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9850,
        "sourceUnit": 10882,
        "src": "117:33:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9781,
              "name": "IBeacon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9774,
              "src": "503:7:39"
            },
            "id": 9782,
            "nodeType": "InheritanceSpecifier",
            "src": "503:7:39"
          },
          {
            "baseName": {
              "id": 9783,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9228,
              "src": "512:7:39"
            },
            "id": 9784,
            "nodeType": "InheritanceSpecifier",
            "src": "512:7:39"
          }
        ],
        "contractDependencies": [
          9228,
          9774,
          10903
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9780,
          "nodeType": "StructuredDocumentation",
          "src": "152:320:39",
          "text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
        },
        "fullyImplemented": true,
        "id": 9849,
        "linearizedBaseContracts": [
          9849,
          9228,
          10903,
          9774
        ],
        "name": "UpgradeableBeacon",
        "nameLocation": "482:17:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9786,
            "mutability": "mutable",
            "name": "_implementation",
            "nameLocation": "542:15:39",
            "nodeType": "VariableDeclaration",
            "scope": 9849,
            "src": "526:31:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9785,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "526:7:39",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9787,
              "nodeType": "StructuredDocumentation",
              "src": "564:90:39",
              "text": " @dev Emitted when the implementation returned by the beacon is changed."
            },
            "id": 9791,
            "name": "Upgraded",
            "nameLocation": "665:8:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9789,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "690:14:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 9791,
                  "src": "674:30:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "673:32:39"
            },
            "src": "659:47:39"
          },
          {
            "body": {
              "id": 9801,
              "nodeType": "Block",
              "src": "898:52:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9798,
                        "name": "implementation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9794,
                        "src": "927:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9797,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9848,
                      "src": "908:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:35:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9800,
                  "nodeType": "ExpressionStatement",
                  "src": "908:35:39"
                }
              ]
            },
            "documentation": {
              "id": 9792,
              "nodeType": "StructuredDocumentation",
              "src": "712:144:39",
              "text": " @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."
            },
            "id": 9802,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9794,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nameLocation": "881:15:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 9802,
                  "src": "873:23:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:25:39"
            },
            "returnParameters": {
              "id": 9796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:0:39"
            },
            "scope": 9849,
            "src": "861:89:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9773
            ],
            "body": {
              "id": 9811,
              "nodeType": "Block",
              "src": "1101:39:39",
              "statements": [
                {
                  "expression": {
                    "id": 9809,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9786,
                    "src": "1118:15:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9808,
                  "id": 9810,
                  "nodeType": "Return",
                  "src": "1111:22:39"
                }
              ]
            },
            "documentation": {
              "id": 9803,
              "nodeType": "StructuredDocumentation",
              "src": "956:67:39",
              "text": " @dev Returns the current implementation address."
            },
            "functionSelector": "5c60da1b",
            "id": 9812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "1037:14:39",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9805,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1074:8:39"
            },
            "parameters": {
              "id": 9804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1051:2:39"
            },
            "returnParameters": {
              "id": 9808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9807,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9812,
                  "src": "1092:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1091:9:39"
            },
            "scope": 9849,
            "src": "1028:112:39",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9828,
              "nodeType": "Block",
              "src": "1470:96:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9821,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9815,
                        "src": "1499:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9820,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9848,
                      "src": "1480:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:37:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9823,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:37:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9825,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9815,
                        "src": "1541:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9824,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9791,
                      "src": "1532:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:27:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9827,
                  "nodeType": "EmitStatement",
                  "src": "1527:32:39"
                }
              ]
            },
            "documentation": {
              "id": 9813,
              "nodeType": "StructuredDocumentation",
              "src": "1146:248:39",
              "text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
            },
            "functionSelector": "3659cfe6",
            "id": 9829,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9818,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9817,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9171,
                  "src": "1460:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1460:9:39"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "1408:9:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9815,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1426:17:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 9829,
                  "src": "1418:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1417:27:39"
            },
            "returnParameters": {
              "id": 9819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:0:39"
            },
            "scope": 9849,
            "src": "1399:167:39",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9847,
              "nodeType": "Block",
              "src": "1804:163:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9838,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9832,
                            "src": "1841:17:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9836,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10881,
                            "src": "1822:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$10881_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 9837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10604,
                          "src": "1822:18:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 9839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1822:37:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 9840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1861:53:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        },
                        "value": "UpgradeableBeacon: implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        }
                      ],
                      "id": 9835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1814:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1814:101:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9842,
                  "nodeType": "ExpressionStatement",
                  "src": "1814:101:39"
                },
                {
                  "expression": {
                    "id": 9845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9843,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9786,
                      "src": "1925:15:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9844,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9832,
                      "src": "1943:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1925:35:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9846,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:35:39"
                }
              ]
            },
            "documentation": {
              "id": 9830,
              "nodeType": "StructuredDocumentation",
              "src": "1572:164:39",
              "text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
            },
            "id": 9848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nameLocation": "1750:18:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9832,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1777:17:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 9848,
                  "src": "1769:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1768:27:39"
            },
            "returnParameters": {
              "id": 9834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:0:39"
            },
            "scope": 9849,
            "src": "1741:226:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 9850,
        "src": "473:1496:39"
      }
    ],
    "src": "33:1937:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x295a9A3400133e18E3E01ECC4770b80D93197d73",
      "transactionHash": "0xd7bf6e38b5daa3818da112648c67d4389d43c1a3a68c6cf60b2a874aaaddb524"
    }
  },
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-09-27T08:15:19.677Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
    "events": {
      "Upgraded(address)": {
        "details": "Emitted when the implementation returned by the beacon is changed."
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon."
      },
      "implementation()": {
        "details": "Returns the current implementation address."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "upgradeTo(address)": {
        "details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}