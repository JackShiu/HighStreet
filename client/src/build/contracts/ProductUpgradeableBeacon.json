{
  "contractName": "ProductUpgradeableBeacon",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"constructor function.\",\"params\":{\"_implementation\":\"address for the implementation logic\"}},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"title\":\"ProductUpgradeableBeacon\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is will be retired. There is no need to create a custom implementation of the UpgradeableBeacon.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jack/Documents/GitHub/HighStreet/client/src/contracts/Mock/ProductUpgradeableBeancon.sol\":\"ProductUpgradeableBeacon\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"/Users/jack/Documents/GitHub/HighStreet/client/src/contracts/Mock/ProductUpgradeableBeancon.sol\":{\"keccak256\":\"0xb3b2af96cdb4a1c194866a4f0345be94698a51e3c44e032d5e2e4fd3402a499f\",\"urls\":[\"bzz-raw://1c2cf8b8c7f21ca8ec552385a7bda63135a982abbdf563a9204ce953c05303dc\",\"dweb:/ipfs/QmYX1AzpsRt8rWpjd4seBaifNBs4o3taQWerxGNqF5rn83\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x5615339d191e77be7e46319b67856f9355786f705b7b3c4a7237ab70c1864ab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c6a52e49bd374890523443ac6e20fa0ca09ff8d65d5adbca6f2c8733758eea\",\"dweb:/ipfs/QmXXccov4bGGVqg6BwYc8QU9JwCNHmVYePj1ZYpgkxTbpF\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x15a35b237beb6f27d2546361342485eda5850ed8fa1cd12ae8f3f7ca7a88d6f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c0d65b3ab1f913a4d550f2764555888db87bda9ee076588f50e5ae565adfe6f\",\"dweb:/ipfs/QmT212mo6xAki1dBdw7uQLi86gzaGEquSxGy1f28mu2V1a\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161059738038061059783398101604081905261002f9161018d565b8061005261004464010000000061006b810204565b64010000000061006f810204565b610064816401000000006100bf810204565b50506101bb565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100d58164010000000061024561018782021704565b610165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b60018054600160a060020a031916600160a060020a0392909216919091179055565b3b151590565b60006020828403121561019e578081fd5b8151600160a060020a03811681146101b4578182fd5b9392505050565b6103cd806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061005a5760e060020a60003504633659cfe6811461005f5780635c60da1b14610074578063715018a61461009d5780638da5cb5b146100a5578063f2fde38b146100ad575b600080fd5b61007261006d366004610334565b6100c0565b005b600154600160a060020a03165b604051600160a060020a03909116815260200160405180910390f35b61007261013b565b610081610179565b6100726100bb366004610334565b610188565b336100c9610179565b600160a060020a0316146100fb5760405160e560020a62461bcd0281526004016100f290610362565b60405180910390fd5b6101048161024b565b604051600160a060020a038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b33610144610179565b600160a060020a03161461016d5760405160e560020a62461bcd0281526004016100f290610362565b61017760006102e4565b565b600054600160a060020a031690565b33610191610179565b600160a060020a0316146101ba5760405160e560020a62461bcd0281526004016100f290610362565b600160a060020a0381166102395760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016100f2565b610242816102e4565b50565b3b151590565b803b6102c25760405160e560020a62461bcd02815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e74726163740000000000000000000000000060648201526084016100f2565b60018054600160a060020a031916600160a060020a0392909216919091179055565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610345578081fd5b8135600160a060020a038116811461035b578182fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212207dccd7c57178c9a92a0eb0c87f79597fdc4815823ae7635142cce8de3e5ca9b964736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061005a5760e060020a60003504633659cfe6811461005f5780635c60da1b14610074578063715018a61461009d5780638da5cb5b146100a5578063f2fde38b146100ad575b600080fd5b61007261006d366004610334565b6100c0565b005b600154600160a060020a03165b604051600160a060020a03909116815260200160405180910390f35b61007261013b565b610081610179565b6100726100bb366004610334565b610188565b336100c9610179565b600160a060020a0316146100fb5760405160e560020a62461bcd0281526004016100f290610362565b60405180910390fd5b6101048161024b565b604051600160a060020a038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b33610144610179565b600160a060020a03161461016d5760405160e560020a62461bcd0281526004016100f290610362565b61017760006102e4565b565b600054600160a060020a031690565b33610191610179565b600160a060020a0316146101ba5760405160e560020a62461bcd0281526004016100f290610362565b600160a060020a0381166102395760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016100f2565b610242816102e4565b50565b3b151590565b803b6102c25760405160e560020a62461bcd02815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e74726163740000000000000000000000000060648201526084016100f2565b60018054600160a060020a031916600160a060020a0392909216919091179055565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610345578081fd5b8135600160a060020a038116811461035b578182fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212207dccd7c57178c9a92a0eb0c87f79597fdc4815823ae7635142cce8de3e5ca9b964736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:746:47",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:47",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:47",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:47",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:47"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:47"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:47"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:47"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:47"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:47"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:47"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:47"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:47"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:47"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:47"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:47",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:47",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:47"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:47"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:47"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:47"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:47"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:47"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:47"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:1:47",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "256:3:47",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:47"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:47"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:47",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:47"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:47"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:47"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:47"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:47"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:47"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:47",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:47"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:47",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:47",
                "type": ""
              }
            ],
            "src": "14:310:47"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:241:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "520:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "531:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:21:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "513:21:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "554:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "565:2:47",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "550:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "550:18:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:2:47",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "543:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:30:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "543:30:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:47",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "609:34:47",
                        "type": "",
                        "value": "UpgradeableBeacon: implementatio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "582:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:62:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:62:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "664:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "675:2:47",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "660:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "660:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "680:21:47",
                        "type": "",
                        "value": "n is not a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "653:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:49:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "653:49:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "711:27:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "723:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "734:3:47",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "719:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:19:47"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "711:4:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "480:9:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "494:4:47",
                "type": ""
              }
            ],
            "src": "329:415:47"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"UpgradeableBeacon: implementatio\")\n        mstore(add(headStart, 96), \"n is not a contract\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 47,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1764:47",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:47",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:259:47",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:47",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:47"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:47"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:47"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:47"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:47"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:47"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:47"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:47"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:47"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:47"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:47"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:47",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "287:26:47",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "296:6:47"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "304:6:47"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "289:6:47"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "289:22:47"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "289:22:47"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:47"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:47"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "241:42:47",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:47"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:54:47"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:65:47"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:73:47"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "322:15:47",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "332:5:47"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "322:6:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:47",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:47",
                "type": ""
              }
            ],
            "src": "14:329:47"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "449:125:47",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "459:26:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "471:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "482:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "467:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "467:18:47"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "459:4:47"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "501:9:47"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "516:6:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "524:42:47",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "512:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "512:55:47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "494:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:74:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "494:74:47"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "418:9:47",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "429:6:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "440:4:47",
                "type": ""
              }
            ],
            "src": "348:226:47"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:228:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "770:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "781:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "763:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:21:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "763:21:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "804:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "815:2:47",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "800:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "800:18:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "820:2:47",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "793:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:30:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "793:30:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "854:2:47",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "859:34:47",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "832:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:62:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "832:62:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "914:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "925:2:47",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "910:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "910:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "930:8:47",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "903:36:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "903:36:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "948:27:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "960:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "971:3:47",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "956:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "956:19:47"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "948:4:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "744:4:47",
                "type": ""
              }
            ],
            "src": "579:402:47"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1160:241:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1177:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1188:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1170:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1170:21:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1170:21:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1211:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1222:2:47",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1207:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1207:18:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1227:2:47",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1200:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:30:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1200:30:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1250:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1261:2:47",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1246:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1266:34:47",
                        "type": "",
                        "value": "UpgradeableBeacon: implementatio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:62:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1239:62:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1321:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1332:2:47",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1317:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1317:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1337:21:47",
                        "type": "",
                        "value": "n is not a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1310:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1310:49:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1310:49:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1368:27:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1380:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1391:3:47",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1376:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1376:19:47"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1368:4:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1137:9:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1151:4:47",
                "type": ""
              }
            ],
            "src": "986:415:47"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1580:182:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1597:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1608:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1590:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1590:21:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1590:21:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1631:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1642:2:47",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1627:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1627:18:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1647:2:47",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1620:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1620:30:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1620:30:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1670:9:47"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1681:2:47",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1666:3:47"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1666:18:47"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1686:34:47",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1659:6:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1659:62:47"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1659:62:47"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1730:26:47",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1742:9:47"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1753:2:47",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1738:3:47"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1738:18:47"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1730:4:47"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1557:9:47",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1571:4:47",
                "type": ""
              }
            ],
            "src": "1406:356:47"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"UpgradeableBeacon: implementatio\")\n        mstore(add(headStart, 96), \"n is not a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 47,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "298:289:9:-:0;;;494:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;549:15;867:23:33;877:12;:10;;;;:12;:::i;:::-;867:9;;;;:23;:::i;:::-;908:35:39;927:15;908:18;;;;:35;:::i;:::-;861:89;494:91:9;298:289;;587:96:45;666:10;587:96;:::o;2041:169:33:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:33;;;-1:-1:-1;;;;;;2131:17:33;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;1741:226:39:-;1822:37;1841:17;1822:18;;;;;;:37;:::i;:::-;1814:101;;;;;;;531:2:47;1814:101:39;;;513:21:47;570:2;550:18;;;543:30;609:34;589:18;;;582:62;680:21;660:18;;;653:49;719:19;;1814:101:39;;;;;;;;1925:15;:35;;-1:-1:-1;;;;;;1925:35:39;-1:-1:-1;;;;;1925:35:39;;;;;;;;;;1741:226::o;718:377:44:-;1034:20;1080:8;;;718:377::o;14:310:47:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:47;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:47:o;503:241::-;298:289:9;;;;;;",
  "deployedSourceMap": "298:289:9:-:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;298:289:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:167:39;;;;;;:::i;:::-;;:::i;:::-;;1028:112;1118:15;;-1:-1:-1;;;;;1118:15:39;1028:112;;;-1:-1:-1;;;;;512:55:47;;;494:74;;482:2;467:18;1028:112:39;;;;;;;1605:92:33;;;:::i;973:85::-;;;:::i;1846:189::-;;;;;;:::i;:::-;;:::i;1399:167:39:-;666:10:45;1185:7:33;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:33;;1177:68;;;;-1:-1:-1;;;;;1177:68:33;;;;;;;:::i;:::-;;;;;;;;;1480:37:39::1;1499:17;1480:18;:37::i;:::-;1532:27;::::0;-1:-1:-1;;;;;1532:27:39;::::1;::::0;::::1;::::0;;;::::1;1399:167:::0;:::o;1605:92:33:-;666:10:45;1185:7:33;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:33;;1177:68;;;;-1:-1:-1;;;;;1177:68:33;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:33;973:85;:::o;1846:189::-;666:10:45;1185:7:33;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:33;;1177:68;;;;-1:-1:-1;;;;;1177:68:33;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:33;::::1;1926:73;;;::::0;-1:-1:-1;;;;;1926:73:33;;781:2:47;1926:73:33::1;::::0;::::1;763:21:47::0;820:2;800:18;;;793:30;859:34;839:18;;;832:62;930:8;910:18;;;903:36;956:19;;1926:73:33::1;753:228:47::0;1926:73:33::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;718:377:44:-;1034:20;1080:8;;;718:377::o;1741:226:39:-;1034:20:44;;1814:101:39;;;;-1:-1:-1;;;;;1814:101:39;;1188:2:47;1814:101:39;;;1170:21:47;1227:2;1207:18;;;1200:30;1266:34;1246:18;;;1239:62;1337:21;1317:18;;;1310:49;1376:19;;1814:101:39;1160:241:47;1814:101:39;1925:15;:35;;-1:-1:-1;;;;;;1925:35:39;-1:-1:-1;;;;;1925:35:39;;;;;;;;;;1741:226::o;2041:169:33:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:33;;;-1:-1:-1;;;;;;2131:17:33;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:329:47:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;-1:-1:-1;;;;;234:5:47;230:54;223:5;220:65;210:2;;304:6;296;289:22;210:2;332:5;84:259;-1:-1:-1;;;84:259:47:o;1406:356::-;1608:2;1590:21;;;1627:18;;;1620:30;1686:34;1681:2;1666:18;;1659:62;1753:2;1738:18;;1580:182::o",
  "source": "pragma solidity ^0.8.2;\n\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title ProductUpgradeableBeacon\n/// @notice This is will be retired. There is no need to create a custom implementation of the UpgradeableBeacon.\ncontract ProductUpgradeableBeacon is UpgradeableBeacon{\n    \n  /**\n   * @dev constructor function.\n   *\n   * @param _implementation             \taddress for the implementation logic\n   *\n  */\n    constructor(address _implementation) UpgradeableBeacon(_implementation) public {\n    \n    }\n}",
  "sourcePath": "/Users/jack/Documents/GitHub/HighStreet/client/src/contracts/Mock/ProductUpgradeableBeancon.sol",
  "ast": {
    "absolutePath": "/Users/jack/Documents/GitHub/HighStreet/client/src/contracts/Mock/ProductUpgradeableBeancon.sol",
    "exportedSymbols": {
      "Address": [
        10881
      ],
      "Context": [
        10903
      ],
      "IBeacon": [
        9774
      ],
      "Ownable": [
        9228
      ],
      "ProductUpgradeableBeacon": [
        1264
      ],
      "UpgradeableBeacon": [
        9849
      ]
    },
    "id": 1265,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1248,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 1249,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1265,
        "sourceUnit": 9850,
        "src": "25:68:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1250,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1265,
        "sourceUnit": 9229,
        "src": "94:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1252,
              "name": "UpgradeableBeacon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9849,
              "src": "335:17:9"
            },
            "id": 1253,
            "nodeType": "InheritanceSpecifier",
            "src": "335:17:9"
          }
        ],
        "contractDependencies": [
          9228,
          9774,
          9849,
          10903
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1251,
          "nodeType": "StructuredDocumentation",
          "src": "148:150:9",
          "text": "@title ProductUpgradeableBeacon\n @notice This is will be retired. There is no need to create a custom implementation of the UpgradeableBeacon."
        },
        "fullyImplemented": true,
        "id": 1264,
        "linearizedBaseContracts": [
          1264,
          9849,
          9228,
          10903,
          9774
        ],
        "name": "ProductUpgradeableBeacon",
        "nameLocation": "307:24:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1262,
              "nodeType": "Block",
              "src": "573:12:9",
              "statements": []
            },
            "documentation": {
              "id": 1254,
              "nodeType": "StructuredDocumentation",
              "src": "361:128:9",
              "text": " @dev constructor function.\n @param _implementation             \taddress for the implementation logic"
            },
            "id": 1263,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1259,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "549:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1260,
                "modifierName": {
                  "id": 1258,
                  "name": "UpgradeableBeacon",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9849,
                  "src": "531:17:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "531:34:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "514:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "506:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "505:25:9"
            },
            "returnParameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:9"
            },
            "scope": 1264,
            "src": "494:91:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1265,
        "src": "298:289:9"
      }
    ],
    "src": "0:587:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/jack/Documents/GitHub/HighStreet/client/src/contracts/Mock/ProductUpgradeableBeancon.sol",
    "exportedSymbols": {
      "Address": [
        10881
      ],
      "Context": [
        10903
      ],
      "IBeacon": [
        9774
      ],
      "Ownable": [
        9228
      ],
      "ProductUpgradeableBeacon": [
        1264
      ],
      "UpgradeableBeacon": [
        9849
      ]
    },
    "id": 1265,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1248,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 1249,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1265,
        "sourceUnit": 9850,
        "src": "25:68:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1250,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1265,
        "sourceUnit": 9229,
        "src": "94:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1252,
              "name": "UpgradeableBeacon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9849,
              "src": "335:17:9"
            },
            "id": 1253,
            "nodeType": "InheritanceSpecifier",
            "src": "335:17:9"
          }
        ],
        "contractDependencies": [
          9228,
          9774,
          9849,
          10903
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1251,
          "nodeType": "StructuredDocumentation",
          "src": "148:150:9",
          "text": "@title ProductUpgradeableBeacon\n @notice This is will be retired. There is no need to create a custom implementation of the UpgradeableBeacon."
        },
        "fullyImplemented": true,
        "id": 1264,
        "linearizedBaseContracts": [
          1264,
          9849,
          9228,
          10903,
          9774
        ],
        "name": "ProductUpgradeableBeacon",
        "nameLocation": "307:24:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1262,
              "nodeType": "Block",
              "src": "573:12:9",
              "statements": []
            },
            "documentation": {
              "id": 1254,
              "nodeType": "StructuredDocumentation",
              "src": "361:128:9",
              "text": " @dev constructor function.\n @param _implementation             \taddress for the implementation logic"
            },
            "id": 1263,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1259,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "549:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1260,
                "modifierName": {
                  "id": 1258,
                  "name": "UpgradeableBeacon",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9849,
                  "src": "531:17:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "531:34:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "514:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "506:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "505:25:9"
            },
            "returnParameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:9"
            },
            "scope": 1264,
            "src": "494:91:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1265,
        "src": "298:289:9"
      }
    ],
    "src": "0:587:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-09-27T03:56:40.768Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "constructor function.",
        "params": {
          "_implementation": "address for the implementation logic"
        }
      },
      "implementation()": {
        "details": "Returns the current implementation address."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "upgradeTo(address)": {
        "details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
      }
    },
    "title": "ProductUpgradeableBeacon",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This is will be retired. There is no need to create a custom implementation of the UpgradeableBeacon.",
    "version": 1
  }
}