{
  "contractName": "BeaconProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x91a577fa9cbb3fda527eefa0e4ab327bbd9949bf5d358be286a33623ed69f76d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d416a3eef7a566c7497998f33be388b382bd71b2b048f9ef7aa6fc8e78443b\",\"dweb:/ipfs/QmXXT4ZEec3JKBwb5gm28wPYqzudDp2pGxdiDC1zME5Efo\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc706395df88dc1d459f21e51c57ab8820af80d1e8c3c14933a651794d78a429f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c19f30fd9c2ad752e3383fe5861655abb9d74c41cdc8ddbb49e5722ac4b8dd5\",\"dweb:/ipfs/QmXUePYiTMoDuqvghPGJfgjPFjjixan2DXreLGiuPDv8AX\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x617614c3aaada8d7a901da2126a7407ae7e06b0410807f5c1b49cea9076199e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92619e75338160854fe67592bdb4facf63303fa0c817bfddc6fd90df02557831\",\"dweb:/ipfs/QmRibp4sJayHoKeyuymBUy11zjgaoGz2hkt6Ejy9JUjCCR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x5615339d191e77be7e46319b67856f9355786f705b7b3c4a7237ab70c1864ab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c6a52e49bd374890523443ac6e20fa0ca09ff8d65d5adbca6f2c8733758eea\",\"dweb:/ipfs/QmXXccov4bGGVqg6BwYc8QU9JwCNHmVYePj1ZYpgkxTbpF\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x5d15d280d1f868f59a8264dc73f7ea8c51f10d78aac864b2f2ad29412d187ff5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c5c1fe2972d97dca1af03884c78315eb261bb486bacfadd04b0f440fdcfd6e\",\"dweb:/ipfs/QmTNTSdUSzUKWEeTH2A37RDXJ2Xf5jfTTpLuy1oudPPE8N\"]}},\"version\":1}",
  "bytecode": "0x6080604052604051610b0a380380610b0a833981016040819052610022916105b3565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d516106be565b600080516020610ac383398151915214610090577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6100a5828260006401000000006100ac810204565b5050610755565b6100be836401000000006101ae810204565b604051600160a060020a038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100ff5750805b156101a9576101a783600160a060020a0316635c60da1b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561015c57600080fd5b505afa158015610170573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101949190610599565b836401000000006100296103c982021704565b505b505050565b6101c4816401000000006100556103fe82021704565b610255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f747261637400000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102f781600160a060020a0316635c60da1b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156102ad57600080fd5b505afa1580156102c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e59190610599565b6401000000006100556103fe82021704565b610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e747261637400000000000000000000000000000000606482015260840161024c565b806103a8600080516020610ac383398151915264010000000061005b61040882021704565b8054600160a060020a031916600160a060020a039290921691909117905550565b60606103f78383604051806060016040528060278152602001610ae36027913964010000000061040b810204565b9392505050565b803b15155b919050565b90565b606061041f846401000000006103fe810204565b6104ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161024c565b60008085600160a060020a0316856040516104c6919061066f565b600060405180830381855af49150503d8060008114610501576040519150601f19603f3d011682016040523d82523d6000602084013e610506565b606091505b509150915061052582828661052f640100000000026401000000009004565b9695505050505050565b6060831561053e5750816103f7565b82511561054e5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024c919061068b565b8051600160a060020a038116811461040357600080fd5b6000602082840312156105aa578081fd5b6103f782610582565b600080604083850312156105c5578081fd5b6105ce83610582565b9150602083015167ffffffffffffffff808211156105ea578283fd5b818501915085601f8301126105fd578283fd5b81518181111561060f5761060f610726565b604051601f8201601f19908116603f0116810190838211818310171561063757610637610726565b8160405282815288602084870101111561064f578586fd5b6106608360208301602088016106fa565b80955050505050509250929050565b600082516106818184602087016106fa565b9190910192915050565b60006020825282518060208401526106aa8160408501602087016106fa565b601f01601f19169190910160400192915050565b6000828210156106f5577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500390565b60005b838110156107155781810151838201526020016106fd565b838111156101a75750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f806107646000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b610109565b565b606061004e83836040518060600160405280602781526020016103036027913961012d565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054600160a060020a031690565b600160a060020a0316635c60da1b6040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156100cc57600080fd5b505afa1580156100e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610104919061025c565b905090565b3660008037600080366000845af43d6000803e808015610128573d6000f35b3d6000fd5b6060833b6101ab5760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60008085600160a060020a0316856040516101c69190610283565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b5091509150610216828286610220565b9695505050505050565b6060831561022f57508161004e565b82511561023f5782518084602001fd5b8160405160e560020a62461bcd0281526004016101a2919061029f565b60006020828403121561026d578081fd5b8151600160a060020a038116811461004e578182fd5b600082516102958184602087016102d2565b9190910192915050565b60006020825282518060208401526102be8160408501602087016102d2565b601f01601f19169190910160400192915050565b60005b838110156102ed5781810151838201526020016102d5565b838111156102fc576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202257808f80775ff8cfb732ae5128df8067451356353edb4346919a76c20c5b4064736f6c63430008030033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "deployedBytecode": "0x60806040523661001357610011610017565b005b6100115b61002761002261005e565b610109565b565b606061004e83836040518060600160405280602781526020016103036027913961012d565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054600160a060020a031690565b600160a060020a0316635c60da1b6040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156100cc57600080fd5b505afa1580156100e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610104919061025c565b905090565b3660008037600080366000845af43d6000803e808015610128573d6000f35b3d6000fd5b6060833b6101ab5760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60008085600160a060020a0316856040516101c69190610283565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b5091509150610216828286610220565b9695505050505050565b6060831561022f57508161004e565b82511561023f5782518084602001fd5b8160405160e560020a62461bcd0281526004016101a2919061029f565b60006020828403121561026d578081fd5b8151600160a060020a038116811461004e578182fd5b600082516102958184602087016102d2565b9190910192915050565b60006020825282518060208401526102be8160408501602087016102d2565b601f01601f19169190910160400192915050565b60005b838110156102ed5781810151838201526020016102d5565b838111156102fc576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202257808f80775ff8cfb732ae5128df8067451356353edb4346919a76c20c5b4064736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4068:44",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:44",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:44",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:44"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:44"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:44",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:44",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:44"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:44"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:1:44",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:3:44",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:44"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:44"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:44",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:44"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:44"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:44"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:44"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:44"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:44"
                  },
                  "nodeType": "YulIf",
                  "src": "115:2:44"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:44",
                "type": ""
              }
            ],
            "src": "14:177:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "277:137:44",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "323:26:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "332:6:44"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "340:6:44"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "325:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "325:22:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "325:22:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "298:7:44"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "307:9:44"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "294:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "294:23:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "290:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "290:32:44"
                  },
                  "nodeType": "YulIf",
                  "src": "287:2:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "358:50:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "398:9:44"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "368:29:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:40:44"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "358:6:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "243:9:44",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "254:7:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "266:6:44",
                "type": ""
              }
            ],
            "src": "196:218:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "526:901:44",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "572:26:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "581:6:44"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "589:6:44"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "574:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "574:22:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "574:22:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "547:7:44"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "556:9:44"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "543:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:23:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "568:2:44",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "539:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:32:44"
                  },
                  "nodeType": "YulIf",
                  "src": "536:2:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "607:50:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "647:9:44"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "617:29:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:40:44"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "607:6:44"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "666:39:44",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "690:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "701:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "686:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "686:18:44"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "680:5:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:25:44"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "670:6:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "714:28:44",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "724:18:44",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "718:2:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "769:26:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "778:6:44"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "786:6:44"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "771:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "771:22:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "771:22:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "757:6:44"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "765:2:44"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "754:2:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:14:44"
                  },
                  "nodeType": "YulIf",
                  "src": "751:2:44"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "804:32:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "818:9:44"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "829:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "814:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "814:22:44"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "808:2:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "884:26:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "893:6:44"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "901:6:44"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "886:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "886:22:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "886:22:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "863:2:44"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "867:4:44",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "859:3:44"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "859:13:44"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "874:7:44"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "855:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "855:27:44"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "848:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "848:35:44"
                  },
                  "nodeType": "YulIf",
                  "src": "845:2:44"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "919:19:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "935:2:44"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "929:5:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "929:9:44"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "923:2:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "961:22:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "963:16:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "963:18:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "963:18:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "953:2:44"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "957:2:44"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "950:2:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:10:44"
                  },
                  "nodeType": "YulIf",
                  "src": "947:2:44"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "992:17:44",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1006:2:44",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1002:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1002:7:44"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "996:2:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1018:23:44",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1038:2:44",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1032:5:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1032:9:44"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1022:6:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1050:71:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1072:6:44"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1096:2:44"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1100:4:44",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1092:3:44"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1092:13:44"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1107:2:44"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1088:3:44"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1088:22:44"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1112:2:44",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1084:3:44"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1084:31:44"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1117:2:44"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1080:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1080:40:44"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1068:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1068:53:44"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1054:10:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1180:22:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1182:16:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1182:18:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1182:18:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1139:10:44"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1151:2:44"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1136:2:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1136:18:44"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1159:10:44"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1171:6:44"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1156:2:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1156:22:44"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1133:2:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1133:46:44"
                  },
                  "nodeType": "YulIf",
                  "src": "1130:2:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1218:2:44",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1222:10:44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1211:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1211:22:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1211:22:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1249:6:44"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1257:2:44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:18:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:18:44"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1306:26:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1315:6:44"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1323:6:44"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1308:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1308:22:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1308:22:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1283:2:44"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1287:2:44"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1279:3:44"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1279:11:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1292:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1275:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1275:20:44"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1297:7:44"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1272:2:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:33:44"
                  },
                  "nodeType": "YulIf",
                  "src": "1269:2:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1367:2:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1371:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1363:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1363:11:44"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1380:6:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1388:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1376:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1376:15:44"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1393:2:44"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1341:21:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1341:55:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1341:55:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1405:16:44",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1415:6:44"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1405:6:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "484:9:44",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "495:7:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "507:6:44",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "515:6:44",
                "type": ""
              }
            ],
            "src": "419:1008:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1569:137:44",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1579:27:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1599:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1593:5:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:13:44"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1583:6:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1641:6:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1649:4:44",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1637:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1637:17:44"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1656:3:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1661:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1615:21:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1615:53:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1615:53:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1677:23:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1688:3:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1693:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1684:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1684:16:44"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1677:3:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1545:3:44",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1550:6:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1561:3:44",
                "type": ""
              }
            ],
            "src": "1432:274:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1832:262:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1849:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1860:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1842:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1842:21:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1842:21:44"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1872:27:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1892:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1886:5:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1886:13:44"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1876:6:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1919:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1930:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1915:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1915:18:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1935:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1908:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:34:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1908:34:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1977:6:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1985:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1973:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1973:15:44"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1994:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2005:2:44",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1990:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1990:18:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2010:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1951:21:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1951:66:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1951:66:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2026:62:44",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2042:9:44"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2061:6:44"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2069:2:44",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2057:3:44"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2057:15:44"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2078:2:44",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2074:3:44"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2074:7:44"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2053:3:44"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2053:29:44"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2038:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2038:45:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2085:2:44",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2034:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2034:54:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2026:4:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1801:9:44",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1812:6:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1823:4:44",
                "type": ""
              }
            ],
            "src": "1711:383:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2273:227:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2290:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2301:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2283:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2283:21:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2283:21:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2324:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2335:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2320:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2320:18:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2340:2:44",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2313:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2313:30:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2313:30:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2363:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2374:2:44",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2359:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2359:18:44"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2379:34:44",
                        "type": "",
                        "value": "ERC1967: new beacon is not a con"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2352:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2352:62:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2352:62:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2434:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2445:2:44",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2430:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2430:18:44"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2450:7:44",
                        "type": "",
                        "value": "tract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2423:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2423:35:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2423:35:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2467:27:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2479:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2490:3:44",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2475:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2475:19:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2467:4:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2250:9:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2264:4:44",
                "type": ""
              }
            ],
            "src": "2099:401:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2679:228:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2696:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2707:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2689:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2689:21:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2689:21:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2730:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2741:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2726:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2726:18:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2746:2:44",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2719:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2719:30:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2719:30:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2769:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2780:2:44",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2765:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2765:18:44"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2785:34:44",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2758:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2758:62:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2758:62:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2840:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2851:2:44",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2836:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2836:18:44"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2856:8:44",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2829:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2829:36:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2829:36:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2874:27:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2886:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2897:3:44",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2882:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2882:19:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2874:4:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2656:9:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2670:4:44",
                "type": ""
              }
            ],
            "src": "2505:402:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3086:238:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3103:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3114:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3096:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3096:21:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3096:21:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3137:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3148:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3133:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3133:18:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3153:2:44",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3126:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3126:30:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3126:30:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3176:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3187:2:44",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3172:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3172:18:44"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3192:34:44",
                        "type": "",
                        "value": "ERC1967: beacon implementation i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3165:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3165:62:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3165:62:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3247:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3258:2:44",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3243:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3243:18:44"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3263:18:44",
                        "type": "",
                        "value": "s not a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3236:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3236:46:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3236:46:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3291:27:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3303:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3314:3:44",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3299:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3299:19:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3291:4:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3063:9:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3077:4:44",
                "type": ""
              }
            ],
            "src": "2912:412:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3378:236:44",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3408:174:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "3429:4:44"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3435:77:44",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3422:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3422:91:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3422:91:44"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3533:1:44",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3536:4:44",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3526:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3526:15:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3526:15:44"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "3561:4:44"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3567:4:44",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3554:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3554:18:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3554:18:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3394:1:44"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3397:1:44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3391:2:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3391:8:44"
                  },
                  "nodeType": "YulIf",
                  "src": "3388:2:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3591:17:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3603:1:44"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3606:1:44"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3599:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3599:9:44"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3591:4:44"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3360:1:44",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3363:1:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3369:4:44",
                "type": ""
              }
            ],
            "src": "3329:285:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3672:205:44",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3682:10:44",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3691:1:44",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3686:1:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3751:63:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3776:3:44"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3781:1:44"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3772:3:44"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3772:11:44"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3795:3:44"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3800:1:44"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3791:3:44"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3791:11:44"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3785:5:44"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3785:18:44"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3765:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3765:39:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3765:39:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3712:1:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3715:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3709:2:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3709:13:44"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3723:19:44",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3725:15:44",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3734:1:44"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3737:2:44",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3730:3:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3730:10:44"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3725:1:44"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3705:3:44",
                    "statements": []
                  },
                  "src": "3701:113:44"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3840:31:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3853:3:44"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3858:6:44"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3849:3:44"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3849:16:44"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3867:1:44",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3842:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3842:27:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3842:27:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3829:1:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3832:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3826:2:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3826:13:44"
                  },
                  "nodeType": "YulIf",
                  "src": "3823:2:44"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3650:3:44",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3655:3:44",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3660:6:44",
                "type": ""
              }
            ],
            "src": "3619:258:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3914:152:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3931:1:44",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3934:77:44",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3924:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3924:88:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3924:88:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4028:1:44",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4031:4:44",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4021:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4021:15:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4021:15:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4052:1:44",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4055:4:44",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4045:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4045:15:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4045:15:44"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3882:184:44"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value1, value1) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1967: new beacon is not a con\")\n        mstore(add(headStart, 96), \"tract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC1967: beacon implementation i\")\n        mstore(add(headStart, 96), \"s not a contract\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 44,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1686:44",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:44",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:252:44",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:44"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:44"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:44"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:44"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:44"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:44"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:44"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:44"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "291:26:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "300:6:44"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "308:6:44"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "293:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:22:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:22:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:44"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:44"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "245:42:44",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:44"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:54:44"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:65:44"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:73:44"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "326:15:44",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "336:5:44"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "326:6:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:44",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:44",
                "type": ""
              }
            ],
            "src": "14:333:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "489:137:44",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "499:27:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "519:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "513:5:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:13:44"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "503:6:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "561:6:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "569:4:44",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "557:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "557:17:44"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "576:3:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "581:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "535:21:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "535:53:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "535:53:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "597:23:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "608:3:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "613:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "604:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "604:16:44"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "597:3:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "465:3:44",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "470:6:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "481:3:44",
                "type": ""
              }
            ],
            "src": "352:274:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "752:262:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "769:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "780:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "762:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:21:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "762:21:44"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "792:27:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "812:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "806:5:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "806:13:44"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "796:6:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "839:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "850:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "835:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "835:18:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "855:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "828:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "828:34:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "828:34:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "897:6:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "905:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "893:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "893:15:44"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "914:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "925:2:44",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "910:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "910:18:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "930:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "871:21:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:66:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "871:66:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "946:62:44",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "962:9:44"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "981:6:44"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "989:2:44",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "977:3:44"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "977:15:44"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "998:2:44",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "994:3:44"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "994:7:44"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "973:3:44"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "973:29:44"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "958:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "958:45:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1005:2:44",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "954:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:54:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "946:4:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "721:9:44",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "732:6:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "743:4:44",
                "type": ""
              }
            ],
            "src": "631:383:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1193:228:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1210:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1221:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1203:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1203:21:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1203:21:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1244:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1255:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1240:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1240:18:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1260:2:44",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1233:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1233:30:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1233:30:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1283:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1294:2:44",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1279:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1279:18:44"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1299:34:44",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1272:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:62:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1272:62:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1354:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1365:2:44",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1350:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1350:18:44"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1370:8:44",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1343:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:36:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1343:36:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1388:27:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1400:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1411:3:44",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1396:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:19:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1388:4:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1170:9:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1184:4:44",
                "type": ""
              }
            ],
            "src": "1019:402:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1479:205:44",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1489:10:44",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1498:1:44",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1493:1:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1558:63:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1583:3:44"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1588:1:44"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1579:3:44"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1579:11:44"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1602:3:44"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1607:1:44"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1598:3:44"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1598:11:44"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1592:5:44"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1592:18:44"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1572:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1572:39:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1572:39:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1519:1:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1522:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1516:2:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1516:13:44"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1530:19:44",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1532:15:44",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1541:1:44"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1544:2:44",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1537:3:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1537:10:44"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1532:1:44"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1512:3:44",
                    "statements": []
                  },
                  "src": "1508:113:44"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1647:31:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1660:3:44"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1665:6:44"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1656:3:44"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1656:16:44"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1674:1:44",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1649:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1649:27:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1649:27:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1636:1:44"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1639:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1633:2:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1633:13:44"
                  },
                  "nodeType": "YulIf",
                  "src": "1630:2:44"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1457:3:44",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1462:3:44",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1467:6:44",
                "type": ""
              }
            ],
            "src": "1426:258:44"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n}",
      "id": 44,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "500:1606:34:-:0;;;982:205;;;;;;;;;;;;;;;;;;:::i;:::-;1078:46;1123:1;1086:33;1078:46;:::i;:::-;-1:-1:-1;;;;;;;;;;;1054:71:34;1047:79;;-1:-1:-1;;;;;1047:79:34;;;;;;;;;;;1136:44;1160:6;1168:4;1174:5;1136:23;;;;:44;:::i;:::-;982:205;;500:1606;;4158:313:32;4264:21;4275:9;4264:10;;;;:21;:::i;:::-;4300:25;;-1:-1:-1;;;;;4300:25:32;;;;;;;;4353:1;4339:4;:11;:15;:28;;;;4358:9;4339:28;4335:130;;;4383:71;4420:9;-1:-1:-1;;;;;4412:33:32;;:35;;;;;-1:-1:-1;;;4412:35:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4449:4;4383:28;;;;;;:71;:::i;:::-;;4335:130;4158:313;;;:::o;6363:405::-;6441:29;6460:9;6441:18;;;;;;:29;:::i;:::-;6420:113;;;;-1:-1:-1;;;;;6420:113:32;;2301:2:44;6420:113:32;;;2283:21:44;2340:2;2320:18;;;2313:30;2379:34;2359:18;;;2352:62;-1:-1:-1;;;;;2430:18:44;;;2423:35;2475:19;;6420:113:32;;;;;;;;;6564:55;6591:9;-1:-1:-1;;;;;6583:33:32;;:35;;;;;-1:-1:-1;;;6583:35:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6564:18;;;;;;:55;:::i;:::-;6543:150;;;;-1:-1:-1;;;;;6543:150:32;;3114:2:44;6543:150:32;;;3096:21:44;3153:2;3133:18;;;3126:30;3192:34;3172:18;;;3165:62;3263:18;3243;;;3236:46;3299:19;;6543:150:32;3086:238:44;6543:150:32;6752:9;6703:40;-1:-1:-1;;;;;;;;;;;6703:26:32;;;;;;:40;:::i;:::-;:58;;-1:-1:-1;;6703:58:32;-1:-1:-1;;;;;6703:58:32;;;;;;;;;;-1:-1:-1;6363:405:32:o;6276:198:41:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;;;;:77;:::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:41:o;718:413::-;1078:20;;1116:8;;718:413;;;;:::o;1542:147:43:-;1669:4;1645:38::o;6660:417:41:-;6771:12;6803:18;6814:6;6803:10;;;;:18;:::i;:::-;6795:69;;;;-1:-1:-1;;;;;6795:69:41;;2707:2:44;6795:69:41;;;2689:21:44;2746:2;2726:18;;;2719:30;2785:34;2765:18;;;2758:62;2856:8;2836:18;;;2829:36;2882:19;;6795:69:41;2679:228:44;6795:69:41;6976:25;;6935:12;;;;-1:-1:-1;;;;;6976:19:41;;;:25;;6996:4;;6976:25;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;;;:52;;;:::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:41:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:41;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7757:20;;-1:-1:-1;;;;;7757:20:41;;;;7764:12;;7757:20;;;:::i;14:177:44:-;93:13;;-1:-1:-1;;;;;135:31:44;;125:42;;115:2;;181:1;178;171:12;196:218;;319:2;307:9;298:7;294:23;290:32;287:2;;;340:6;332;325:22;287:2;368:40;398:9;368:40;:::i;419:1008::-;;;568:2;556:9;547:7;543:23;539:32;536:2;;;589:6;581;574:22;536:2;617:40;647:9;617:40;:::i;:::-;607:50;;701:2;690:9;686:18;680:25;724:18;765:2;757:6;754:14;751:2;;;786:6;778;771:22;751:2;829:6;818:9;814:22;804:32;;874:7;867:4;863:2;859:13;855:27;845:2;;901:6;893;886:22;845:2;935;929:9;957:2;953;950:10;947:2;;;963:18;;:::i;:::-;1038:2;1032:9;1006:2;1092:13;;-1:-1:-1;;1088:22:44;;;1112:2;1084:31;1080:40;1068:53;;;1136:18;;;1156:22;;;1133:46;1130:2;;;1182:18;;:::i;:::-;1222:10;1218:2;1211:22;1257:2;1249:6;1242:18;1297:7;1292:2;1287;1283;1279:11;1275:20;1272:33;1269:2;;;1323:6;1315;1308:22;1269:2;1341:55;1393:2;1388;1380:6;1376:15;1371:2;1367;1363:11;1341:55;:::i;:::-;1415:6;1405:16;;;;;;;526:901;;;;;:::o;1432:274::-;;1599:6;1593:13;1615:53;1661:6;1656:3;1649:4;1641:6;1637:17;1615:53;:::i;:::-;1684:16;;;;;1569:137;-1:-1:-1;;1569:137:44:o;1711:383::-;;1860:2;1849:9;1842:21;1892:6;1886:13;1935:6;1930:2;1919:9;1915:18;1908:34;1951:66;2010:6;2005:2;1994:9;1990:18;1985:2;1977:6;1973:15;1951:66;:::i;:::-;2078:2;2057:15;-1:-1:-1;;2053:29:44;2038:45;;;;2085:2;2034:54;;1832:262;-1:-1:-1;;1832:262:44:o;3329:285::-;;3397:1;3394;3391:8;3388:2;;;-1:-1:-1;;;;;3422:91:44;;3536:4;3533:1;3526:15;3567:4;3429;3554:18;3388:2;-1:-1:-1;3599:9:44;;3378:236::o;3619:258::-;3691:1;3701:113;3715:6;3712:1;3709:13;3701:113;;;3791:11;;;3785:18;3772:11;;;3765:39;3737:2;3730:10;3701:113;;;3832:6;3829:1;3826:13;3823:2;;;-1:-1:-1;;3867:1:44;3849:16;;3842:27;3672:205::o;3882:184::-;-1:-1:-1;;;;;3931:1:44;3924:88;;;4031:4;4028:1;4021:15;4055:4;;4045:15;3914:152;500:1606:34;;;;;;",
  "deployedSourceMap": "500:1606:34:-:0;;;;;;2835:11:33;:9;:11::i;:::-;500:1606:34;;2611:11:33;2257:110;2332:28;2342:17;:15;:17::i;:::-;2332:9;:28::i;:::-;2257:110::o;6276:198:41:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:41:o;718:413::-;1078:20;1116:8;;;718:413::o;1542:147:43:-;1669:4;1645:38::o;1455:138:34:-;5912:66:32;6228:46;1548:38:34;;;-1:-1:-1;;;;;1548:38:34;;;;1522:7;;-1:-1:-1;;;;;6228:46:32;;-1:-1:-1;;1548:38:34;;;;;;;;;;;;;;6228:46:32;1548:38:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1541:45;;1455:138;:::o;883:895:33:-;1277:14;1274:1;1271;1258:34;1491:1;1488;1472:14;1469:1;1453:14;1446:5;1433:60;1567:16;1564:1;1561;1546:38;1605:6;1672:38;;;;1743:16;1740:1;1733:27;1672:38;1691:16;1688:1;1681:27;6660:417:41;6771:12;1078:20;;6795:69;;;;-1:-1:-1;;;;;6795:69:41;;1221:2:44;6795:69:41;;;1203:21:44;1260:2;1240:18;;;1233:30;1299:34;1279:18;;;1272:62;1370:8;1350:18;;;1343:36;1396:19;;6795:69:41;;;;;;;;;6976:25;;6935:12;;;;-1:-1:-1;;;;;6976:19:41;;;:25;;6996:4;;6976:25;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;:52::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:41:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:41;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7757:20;;-1:-1:-1;;;;;7757:20:41;;;;7764:12;;7757:20;;;:::i;14:333:44:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:54:44;;224:65;;214:2;;308:6;300;293:22;352:274;;519:6;513:13;535:53;581:6;576:3;569:4;561:6;557:17;535:53;:::i;:::-;604:16;;;;;489:137;-1:-1:-1;;489:137:44:o;631:383::-;;780:2;769:9;762:21;812:6;806:13;855:6;850:2;839:9;835:18;828:34;871:66;930:6;925:2;914:9;910:18;905:2;897:6;893:15;871:66;:::i;:::-;998:2;977:15;-1:-1:-1;;973:29:44;958:45;;;;1005:2;954:54;;752:262;-1:-1:-1;;752:262:44:o;1426:258::-;1498:1;1508:113;1522:6;1519:1;1516:13;1508:113;;;1598:11;;;1592:18;1579:11;;;1572:39;1544:2;1537:10;1508:113;;;1639:6;1636:1;1633:13;1630:2;;;1674:1;1665:6;1660:3;1656:16;1649:27;1630:2;;1479:205;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../Proxy.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        assert(_BEACON_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.beacon\")) - 1));\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address) {\n        return _getBeacon();\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
    "exportedSymbols": {
      "Address": [
        9875
      ],
      "BeaconProxy": [
        8835
      ],
      "ERC1967Upgrade": [
        8701
      ],
      "IBeacon": [
        8845
      ],
      "Proxy": [
        8753
      ],
      "StorageSlot": [
        9958
      ]
    },
    "id": 8836,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8755,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:34"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 8756,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8836,
        "sourceUnit": 8846,
        "src": "58:23:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 8757,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8836,
        "sourceUnit": 8754,
        "src": "82:22:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "../ERC1967/ERC1967Upgrade.sol",
        "id": 8758,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8836,
        "sourceUnit": 8702,
        "src": "105:39:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8760,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8753,
              "src": "524:5:34"
            },
            "id": 8761,
            "nodeType": "InheritanceSpecifier",
            "src": "524:5:34"
          },
          {
            "baseName": {
              "id": 8762,
              "name": "ERC1967Upgrade",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8701,
              "src": "531:14:34"
            },
            "id": 8763,
            "nodeType": "InheritanceSpecifier",
            "src": "531:14:34"
          }
        ],
        "contractDependencies": [
          8701,
          8753
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8759,
          "nodeType": "StructuredDocumentation",
          "src": "146:353:34",
          "text": " @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"
        },
        "fullyImplemented": true,
        "id": 8835,
        "linearizedBaseContracts": [
          8835,
          8701,
          8753
        ],
        "name": "BeaconProxy",
        "nameLocation": "509:11:34",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8793,
              "nodeType": "Block",
              "src": "1037:150:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 8784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8772,
                          "name": "_BEACON_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8646,
                          "src": "1054:12:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e626561636f6e",
                                        "id": 8778,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1096:22:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        },
                                        "value": "eip1967.proxy.beacon"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        }
                                      ],
                                      "id": 8777,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1086:9:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 8779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1086:33:34",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 8776,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1078:7:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 8775,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1078:7:34",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 8780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1078:42:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 8781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1123:1:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1078:46:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1070:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 8773,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1070:7:34",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1070:55:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1054:71:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8771,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1047:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:79:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8786,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:79:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8788,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8766,
                        "src": "1160:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8789,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8768,
                        "src": "1168:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8787,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8575,
                      "src": "1136:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 8791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:44:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8792,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:44:34"
                }
              ]
            },
            "documentation": {
              "id": 8764,
              "nodeType": "StructuredDocumentation",
              "src": "552:425:34",
              "text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."
            },
            "id": 8794,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8766,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1002:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8794,
                  "src": "994:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8768,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1023:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8794,
                  "src": "1010:17:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8767,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "993:35:34"
            },
            "returnParameters": {
              "id": 8770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:34"
            },
            "scope": 8835,
            "src": "982:205:34",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8803,
              "nodeType": "Block",
              "src": "1316:36:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8800,
                      "name": "_getBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8664,
                      "src": "1333:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 8801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:12:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8799,
                  "id": 8802,
                  "nodeType": "Return",
                  "src": "1326:19:34"
                }
              ]
            },
            "documentation": {
              "id": 8795,
              "nodeType": "StructuredDocumentation",
              "src": "1193:59:34",
              "text": " @dev Returns the current beacon address."
            },
            "id": 8804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beacon",
            "nameLocation": "1266:7:34",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:2:34"
            },
            "returnParameters": {
              "id": 8799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8798,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8804,
                  "src": "1307:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:9:34"
            },
            "scope": 8835,
            "src": "1257:95:34",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              8718
            ],
            "body": {
              "id": 8818,
              "nodeType": "Block",
              "src": "1531:62:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8812,
                              "name": "_getBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8664,
                              "src": "1556:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 8813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1556:12:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8811,
                          "name": "IBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8845,
                          "src": "1548:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$8845_$",
                            "typeString": "type(contract IBeacon)"
                          }
                        },
                        "id": 8814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1548:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeacon_$8845",
                          "typeString": "contract IBeacon"
                        }
                      },
                      "id": 8815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "implementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8844,
                      "src": "1548:36:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 8816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:38:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8810,
                  "id": 8817,
                  "nodeType": "Return",
                  "src": "1541:45:34"
                }
              ]
            },
            "documentation": {
              "id": 8805,
              "nodeType": "StructuredDocumentation",
              "src": "1358:92:34",
              "text": " @dev Returns the current implementation address of the associated beacon."
            },
            "id": 8819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1464:15:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8807,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1504:8:34"
            },
            "parameters": {
              "id": 8806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1479:2:34"
            },
            "returnParameters": {
              "id": 8810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8819,
                  "src": "1522:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1521:9:34"
            },
            "scope": 8835,
            "src": "1455:138:34",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8833,
              "nodeType": "Block",
              "src": "2043:61:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8828,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8822,
                        "src": "2077:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8829,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8824,
                        "src": "2085:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2091:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8827,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8575,
                      "src": "2053:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 8831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:44:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8832,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:44:34"
                }
              ]
            },
            "documentation": {
              "id": 8820,
              "nodeType": "StructuredDocumentation",
              "src": "1599:367:34",
              "text": " @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."
            },
            "id": 8834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBeacon",
            "nameLocation": "1980:10:34",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8822,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1999:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8834,
                  "src": "1991:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8824,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2020:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8834,
                  "src": "2007:17:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8823,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:35:34"
            },
            "returnParameters": {
              "id": 8826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:34"
            },
            "scope": 8835,
            "src": "1971:133:34",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 8836,
        "src": "500:1606:34"
      }
    ],
    "src": "33:2074:34"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
    "exportedSymbols": {
      "Address": [
        9875
      ],
      "BeaconProxy": [
        8835
      ],
      "ERC1967Upgrade": [
        8701
      ],
      "IBeacon": [
        8845
      ],
      "Proxy": [
        8753
      ],
      "StorageSlot": [
        9958
      ]
    },
    "id": 8836,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8755,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:34"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 8756,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8836,
        "sourceUnit": 8846,
        "src": "58:23:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 8757,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8836,
        "sourceUnit": 8754,
        "src": "82:22:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "../ERC1967/ERC1967Upgrade.sol",
        "id": 8758,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8836,
        "sourceUnit": 8702,
        "src": "105:39:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8760,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8753,
              "src": "524:5:34"
            },
            "id": 8761,
            "nodeType": "InheritanceSpecifier",
            "src": "524:5:34"
          },
          {
            "baseName": {
              "id": 8762,
              "name": "ERC1967Upgrade",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8701,
              "src": "531:14:34"
            },
            "id": 8763,
            "nodeType": "InheritanceSpecifier",
            "src": "531:14:34"
          }
        ],
        "contractDependencies": [
          8701,
          8753
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8759,
          "nodeType": "StructuredDocumentation",
          "src": "146:353:34",
          "text": " @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"
        },
        "fullyImplemented": true,
        "id": 8835,
        "linearizedBaseContracts": [
          8835,
          8701,
          8753
        ],
        "name": "BeaconProxy",
        "nameLocation": "509:11:34",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8793,
              "nodeType": "Block",
              "src": "1037:150:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 8784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8772,
                          "name": "_BEACON_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8646,
                          "src": "1054:12:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e626561636f6e",
                                        "id": 8778,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1096:22:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        },
                                        "value": "eip1967.proxy.beacon"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        }
                                      ],
                                      "id": 8777,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1086:9:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 8779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1086:33:34",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 8776,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1078:7:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 8775,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1078:7:34",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 8780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1078:42:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 8781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1123:1:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1078:46:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1070:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 8773,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1070:7:34",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1070:55:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1054:71:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8771,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1047:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:79:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8786,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:79:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8788,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8766,
                        "src": "1160:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8789,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8768,
                        "src": "1168:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8787,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8575,
                      "src": "1136:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 8791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:44:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8792,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:44:34"
                }
              ]
            },
            "documentation": {
              "id": 8764,
              "nodeType": "StructuredDocumentation",
              "src": "552:425:34",
              "text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."
            },
            "id": 8794,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8766,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1002:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8794,
                  "src": "994:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8768,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1023:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8794,
                  "src": "1010:17:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8767,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "993:35:34"
            },
            "returnParameters": {
              "id": 8770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:34"
            },
            "scope": 8835,
            "src": "982:205:34",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8803,
              "nodeType": "Block",
              "src": "1316:36:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8800,
                      "name": "_getBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8664,
                      "src": "1333:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 8801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:12:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8799,
                  "id": 8802,
                  "nodeType": "Return",
                  "src": "1326:19:34"
                }
              ]
            },
            "documentation": {
              "id": 8795,
              "nodeType": "StructuredDocumentation",
              "src": "1193:59:34",
              "text": " @dev Returns the current beacon address."
            },
            "id": 8804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beacon",
            "nameLocation": "1266:7:34",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:2:34"
            },
            "returnParameters": {
              "id": 8799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8798,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8804,
                  "src": "1307:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:9:34"
            },
            "scope": 8835,
            "src": "1257:95:34",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              8718
            ],
            "body": {
              "id": 8818,
              "nodeType": "Block",
              "src": "1531:62:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8812,
                              "name": "_getBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8664,
                              "src": "1556:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 8813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1556:12:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8811,
                          "name": "IBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8845,
                          "src": "1548:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$8845_$",
                            "typeString": "type(contract IBeacon)"
                          }
                        },
                        "id": 8814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1548:21:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeacon_$8845",
                          "typeString": "contract IBeacon"
                        }
                      },
                      "id": 8815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "implementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8844,
                      "src": "1548:36:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 8816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:38:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8810,
                  "id": 8817,
                  "nodeType": "Return",
                  "src": "1541:45:34"
                }
              ]
            },
            "documentation": {
              "id": 8805,
              "nodeType": "StructuredDocumentation",
              "src": "1358:92:34",
              "text": " @dev Returns the current implementation address of the associated beacon."
            },
            "id": 8819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1464:15:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8807,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1504:8:34"
            },
            "parameters": {
              "id": 8806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1479:2:34"
            },
            "returnParameters": {
              "id": 8810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8819,
                  "src": "1522:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1521:9:34"
            },
            "scope": 8835,
            "src": "1455:138:34",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8833,
              "nodeType": "Block",
              "src": "2043:61:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8828,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8822,
                        "src": "2077:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8829,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8824,
                        "src": "2085:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2091:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8827,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8575,
                      "src": "2053:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 8831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:44:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8832,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:44:34"
                }
              ]
            },
            "documentation": {
              "id": 8820,
              "nodeType": "StructuredDocumentation",
              "src": "1599:367:34",
              "text": " @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."
            },
            "id": 8834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBeacon",
            "nameLocation": "1980:10:34",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8822,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1999:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8834,
                  "src": "1991:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8824,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2020:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 8834,
                  "src": "2007:17:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8823,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:35:34"
            },
            "returnParameters": {
              "id": 8826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:34"
            },
            "scope": 8835,
            "src": "1971:133:34",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 8836,
        "src": "500:1606:34"
      }
    ],
    "src": "33:2074:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-09-16T10:31:19.847Z",
  "devdoc": {
    "details": "This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}